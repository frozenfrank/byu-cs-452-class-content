create table public.task (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  project_id bigint null,
  name character varying null,
  job_title_id character varying null,
  rp_request_id character varying null,
  percent_complete smallint null,
  start_date date null,
  num_employees smallint null,
  square_feet integer null,
  juans_days numeric null,
  constraint Task_pkey primary key (id),
  constraint Task_project_id_fkey foreign KEY (project_id) references project (id),
  constraint task_job_title_id_fkey foreign KEY (job_title_id) references job_title (id) on update CASCADE on delete set null
) TABLESPACE pg_default;

create table public.project (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  project_name character varying not null,
  due_date date null,
  last_import timestamp without time zone null,
  procore_id character varying null,
  procore_name character varying null,
  rp_group_id character varying null,
  active boolean null,
  square_feet integer not null default 0,
  status character varying null,
  assigned_leader_name character varying null,
  constraint Project_pkey primary key (id),
  constraint Project_project_name_key unique (project_name)
) TABLESPACE pg_default;

create table public.job_title (
  id character varying not null,
  name character varying not null,
  color character varying null,
  type character varying null,
  hourly_rate numeric null,
  group_ids json null,
  globally_accessible boolean null,
  company_id character varying null,
  sequence smallint null,
  constraint job_title_pkey primary key (id)
) TABLESPACE pg_default;

create table public.project_group_availability (
  project_id bigint not null,
  group_id character varying not null default ''::character varying,
  constraint project_group_availability_pkey primary key (project_id, group_id),
  constraint project_group_availability_group_id_fkey foreign KEY (group_id) references "group" (id) on update CASCADE on delete CASCADE,
  constraint project_group_availability_project_id_fkey foreign KEY (project_id) references project (id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create table public.group (
  id character varying not null,
  name character varying not null,
  timezone character varying not null,
  color character varying null,
  constraint group_pkey primary key (id)
) TABLESPACE pg_default;
